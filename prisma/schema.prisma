// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String
  password   String
  role       UserRole
  contactNo  String
  address    String
  profileImg String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  reviewAndRatings ReviewAndRating[]
  orders           Order[]

  @@map("user")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]

  @@map("category")
}

model Book {
  id              String   @id @default(uuid())
  title           String
  author          String
  price           String
  genre           String
  publicationDate String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  reviewAndRatings ReviewAndRating[]
  orderedBooks     OrderedBook[]

  @@map("book")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  bookId String
  book   Book   @relation(fields: [bookId], references: [id])

  @@map("review_and_rating")
}

model Order {
  id     String @id @default(uuid())
  status Status

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  orderedBooks OrderedBook[]

  @@map("review_and_ratingorder")
}

model OrderedBook {
  id       String @id @default(uuid())
  quantity String

  orderId String
  order   Order  @relation(fields: [orderId], references: [id])

  bookId String
  book   Book   @relation(fields: [bookId], references: [id])

  @@map("ordered_books")
}

enum UserRole {
  admin
  customer
}

enum Status {
  pending
  shipped
  delivered
}
